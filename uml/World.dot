#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// world.World
	c17895 [label=<<table title="world.World" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./World.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> World </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - xSize : double </td></tr>
<tr><td align="left" balign="left"> - ySize : double </td></tr>
<tr><td align="left" balign="left"> - gameTime : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getxSize() : double </td></tr>
<tr><td align="left" balign="left"> - setXSize(xSize : double) </td></tr>
<tr><td align="left" balign="left"> + getySize() : double </td></tr>
<tr><td align="left" balign="left"> - setYSize(ySize : double) </td></tr>
<tr><td align="left" balign="left"> - canHaveAsSize(size : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + getGameTime() : double </td></tr>
<tr><td align="left" balign="left"> # canHaveAsGameTime(gameTime : double) : boolean </td></tr>
<tr><td align="left" balign="left"> # setGameTime(gameTime : double) </td></tr>
<tr><td align="left" balign="left"> # advandeGameTime(time : double) </td></tr>
<tr><td align="left" balign="left"> - canHaveAsEntity(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> + add(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> + evolve(dt : double, coll : CollisionListener) </td></tr>
<tr><td align="left" balign="left"> - getNextCollision() : Collision </td></tr>
<tr><td align="left" balign="left"> - advanceAll(dt : double) </td></tr>
<tr><td align="left" balign="left"> + isInWorld(position : Position) : boolean </td></tr>
<tr><td align="left" balign="left"> - isInWorld(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> - isSpaceForEntity(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> + numberOfEntities() : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./World.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//world.World extends java.util.ArrayList<world.entity.Entity>
	c17921:p -> c17895:p [dir=back,arrowtail=empty];
	// java.util.ArrayList<E>
	c17921 [label=<<table title="java.util.ArrayList" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/ArrayList.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> java.util.ArrayList&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - elementData : java.lang.Object[] </td></tr>
<tr><td align="left" balign="left"> - size : int </td></tr>
<tr><td align="left" balign="left"> - MAX_ARRAY_SIZE : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + trimToSize() </td></tr>
<tr><td align="left" balign="left"> + ensureCapacity(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - ensureCapacityInternal(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - grow(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - hugeCapacity(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : java.lang.Object) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : java.lang.Object) : int </td></tr>
<tr><td align="left" balign="left"> + clone() : java.lang.Object </td></tr>
<tr><td align="left" balign="left"> + toArray() : java.lang.Object[] </td></tr>
<tr><td align="left" balign="left"> + toArray(arg0 : T[]) : T[] </td></tr>
<tr><td align="left" balign="left"> ~ elementData(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + get(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + set(arg0 : int, arg1 : E) : E </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : int, arg1 : E) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> - fastRemove(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : java.util.Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : int, arg1 : java.util.Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> # removeRange(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> - rangeCheck(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - rangeCheckForAdd(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - outOfBoundsMsg(arg0 : int) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + removeAll(arg0 : java.util.Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + retainAll(arg0 : java.util.Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - batchRemove(arg0 : java.util.Collection&lt;?&gt;, arg1 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : java.io.ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : java.io.ObjectInputStream) </td></tr>
<tr><td align="left" balign="left"> + listIterator(arg0 : int) : java.util.ListIterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + listIterator() : java.util.ListIterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + iterator() : java.util.Iterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + subList(arg0 : int, arg1 : int) : java.util.List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> ~ subListRangeCheck(arg0 : int, arg1 : int, arg2 : int) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/util/ArrayList.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

