// Generated from AsteroidsParser.g4 by ANTLR 4.0
 package model.programs.parsing; 
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class AsteroidsParserLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		SELF=1, TRUE=2, FALSE=3, NULL=4, BOOL=5, DOUBLE=6, ENTITY=7, SHIP=8, ASTEROID=9, 
		BULLET=10, ANY=11, GETRADIUS=12, GETX=13, GETY=14, GETVX=15, GETVY=16, 
		GETDIR=17, SQRT=18, SIN=19, COS=20, NOT=21, THRUSTON=22, THRUSTOFF=23, 
		TURN=24, FIRE=25, SKIP=26, PRINT=27, IF=28, THEN=29, ELSE=30, WHILE=31, 
		DO=32, FOREACH=33, ASSIGN=34, MUL=35, DIV=36, ADD=37, SUB=38, EQ=39, NEQ=40, 
		LT=41, GT=42, LEQ=43, GEQ=44, AND=45, OR=46, NUMBER=47, FLOAT=48, INTEGER=49, 
		IDENTIFIER=50, LEFT_PAREN=51, RIGHT_PAREN=52, LEFT_BRACE=53, RIGHT_BRACE=54, 
		SEMICOLON=55, COMMA=56, WHITESPACE=57, SINGLE_COMMENT=58;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'self'", "'true'", "'false'", "'null'", "'bool'", "'double'", "'entity'", 
		"'ship'", "'asteroid'", "'bullet'", "'any'", "'getradius'", "'getx'", 
		"'gety'", "'getvx'", "'getvy'", "'getdir'", "'sqrt'", "'sin'", "'cos'", 
		"'!'", "'thrust'", "'thrust_off'", "'turn'", "'fire'", "'skip'", "'print'", 
		"'if'", "'then'", "'else'", "'while'", "'do'", "'foreach'", "':='", "'*'", 
		"'/'", "'+'", "'-'", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'&&'", 
		"'||'", "NUMBER", "FLOAT", "INTEGER", "IDENTIFIER", "'('", "')'", "'{'", 
		"'}'", "';'", "','", "WHITESPACE", "SINGLE_COMMENT"
	};
	public static final String[] ruleNames = {
		"SELF", "TRUE", "FALSE", "NULL", "BOOL", "DOUBLE", "ENTITY", "SHIP", "ASTEROID", 
		"BULLET", "ANY", "GETRADIUS", "GETX", "GETY", "GETVX", "GETVY", "GETDIR", 
		"SQRT", "SIN", "COS", "NOT", "THRUSTON", "THRUSTOFF", "TURN", "FIRE", 
		"SKIP", "PRINT", "IF", "THEN", "ELSE", "WHILE", "DO", "FOREACH", "ASSIGN", 
		"MUL", "DIV", "ADD", "SUB", "EQ", "NEQ", "LT", "GT", "LEQ", "GEQ", "AND", 
		"OR", "NUMBER", "FLOAT", "INTEGER", "IDENTIFIER", "LETTER", "LOWER", "UPPER", 
		"DIGIT", "LEFT_PAREN", "RIGHT_PAREN", "LEFT_BRACE", "RIGHT_BRACE", "SEMICOLON", 
		"COMMA", "WHITESPACE", "SINGLE_COMMENT", "NEWLINE"
	};





	public AsteroidsParserLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AsteroidsParser.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 60: WHITESPACE_action((RuleContext)_localctx, actionIndex); break;

		case 61: SINGLE_COMMENT_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WHITESPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void SINGLE_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\4<\u01ae\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4"+
		":\t:\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3"+
		"\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6"+
		"\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3"+
		"\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13"+
		"\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16"+
		"\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26"+
		"\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32"+
		"\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35"+
		"\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3"+
		" \3 \3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3%\3%\3&"+
		"\3&\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3"+
		"/\3/\3/\3\60\3\60\5\60\u0161\n\60\3\61\3\61\3\61\6\61\u0166\n\61\r\61"+
		"\16\61\u0167\3\62\5\62\u016b\n\62\3\62\3\62\7\62\u016f\n\62\f\62\16\62"+
		"\u0172\13\62\3\63\3\63\3\63\3\63\7\63\u0178\n\63\f\63\16\63\u017b\13\63"+
		"\3\64\3\64\5\64\u017f\n\64\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\39\3"+
		":\3:\3;\3;\3<\3<\3=\3=\3>\6>\u0194\n>\r>\16>\u0195\3>\3>\3?\3?\3?\3?\7"+
		"?\u019e\n?\f?\16?\u01a1\13?\3?\3?\3?\3?\3@\5@\u01a8\n@\3@\6@\u01ab\n@"+
		"\r@\16@\u01ac\2A\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23"+
		"\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1"+
		"\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1"+
		";\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1["+
		"/\1]\60\1_\61\1a\62\1c\63\1e\64\1g\2\1i\2\1k\2\1m\2\1o\65\1q\66\1s\67"+
		"\1u8\1w9\1y:\1{;\2}<\3\177\2\1\3\2\5\4--//\5\13\f\17\17\"\"\4\f\f\17\17"+
		"\u01b4\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2"+
		"\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3"+
		"\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2"+
		"\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2"+
		"/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2"+
		"\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2"+
		"G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3"+
		"\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2"+
		"\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2"+
		"u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\3\u0081\3\2\2\2"+
		"\5\u0086\3\2\2\2\7\u008b\3\2\2\2\t\u0091\3\2\2\2\13\u0096\3\2\2\2\r\u009b"+
		"\3\2\2\2\17\u00a2\3\2\2\2\21\u00a9\3\2\2\2\23\u00ae\3\2\2\2\25\u00b7\3"+
		"\2\2\2\27\u00be\3\2\2\2\31\u00c2\3\2\2\2\33\u00cc\3\2\2\2\35\u00d1\3\2"+
		"\2\2\37\u00d6\3\2\2\2!\u00dc\3\2\2\2#\u00e2\3\2\2\2%\u00e9\3\2\2\2\'\u00ee"+
		"\3\2\2\2)\u00f2\3\2\2\2+\u00f6\3\2\2\2-\u00f8\3\2\2\2/\u00ff\3\2\2\2\61"+
		"\u010a\3\2\2\2\63\u010f\3\2\2\2\65\u0114\3\2\2\2\67\u0119\3\2\2\29\u011f"+
		"\3\2\2\2;\u0122\3\2\2\2=\u0127\3\2\2\2?\u012c\3\2\2\2A\u0132\3\2\2\2C"+
		"\u0135\3\2\2\2E\u013d\3\2\2\2G\u0140\3\2\2\2I\u0142\3\2\2\2K\u0144\3\2"+
		"\2\2M\u0146\3\2\2\2O\u0148\3\2\2\2Q\u014b\3\2\2\2S\u014e\3\2\2\2U\u0150"+
		"\3\2\2\2W\u0152\3\2\2\2Y\u0155\3\2\2\2[\u0158\3\2\2\2]\u015b\3\2\2\2_"+
		"\u0160\3\2\2\2a\u0162\3\2\2\2c\u016a\3\2\2\2e\u0173\3\2\2\2g\u017e\3\2"+
		"\2\2i\u0180\3\2\2\2k\u0182\3\2\2\2m\u0184\3\2\2\2o\u0186\3\2\2\2q\u0188"+
		"\3\2\2\2s\u018a\3\2\2\2u\u018c\3\2\2\2w\u018e\3\2\2\2y\u0190\3\2\2\2{"+
		"\u0193\3\2\2\2}\u0199\3\2\2\2\177\u01aa\3\2\2\2\u0081\u0082\7u\2\2\u0082"+
		"\u0083\7g\2\2\u0083\u0084\7n\2\2\u0084\u0085\7h\2\2\u0085\4\3\2\2\2\u0086"+
		"\u0087\7v\2\2\u0087\u0088\7t\2\2\u0088\u0089\7w\2\2\u0089\u008a\7g\2\2"+
		"\u008a\6\3\2\2\2\u008b\u008c\7h\2\2\u008c\u008d\7c\2\2\u008d\u008e\7n"+
		"\2\2\u008e\u008f\7u\2\2\u008f\u0090\7g\2\2\u0090\b\3\2\2\2\u0091\u0092"+
		"\7p\2\2\u0092\u0093\7w\2\2\u0093\u0094\7n\2\2\u0094\u0095\7n\2\2\u0095"+
		"\n\3\2\2\2\u0096\u0097\7d\2\2\u0097\u0098\7q\2\2\u0098\u0099\7q\2\2\u0099"+
		"\u009a\7n\2\2\u009a\f\3\2\2\2\u009b\u009c\7f\2\2\u009c\u009d\7q\2\2\u009d"+
		"\u009e\7w\2\2\u009e\u009f\7d\2\2\u009f\u00a0\7n\2\2\u00a0\u00a1\7g\2\2"+
		"\u00a1\16\3\2\2\2\u00a2\u00a3\7g\2\2\u00a3\u00a4\7p\2\2\u00a4\u00a5\7"+
		"v\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7\7v\2\2\u00a7\u00a8\7{\2\2\u00a8\20"+
		"\3\2\2\2\u00a9\u00aa\7u\2\2\u00aa\u00ab\7j\2\2\u00ab\u00ac\7k\2\2\u00ac"+
		"\u00ad\7r\2\2\u00ad\22\3\2\2\2\u00ae\u00af\7c\2\2\u00af\u00b0\7u\2\2\u00b0"+
		"\u00b1\7v\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3\7t\2\2\u00b3\u00b4\7q\2\2"+
		"\u00b4\u00b5\7k\2\2\u00b5\u00b6\7f\2\2\u00b6\24\3\2\2\2\u00b7\u00b8\7"+
		"d\2\2\u00b8\u00b9\7w\2\2\u00b9\u00ba\7n\2\2\u00ba\u00bb\7n\2\2\u00bb\u00bc"+
		"\7g\2\2\u00bc\u00bd\7v\2\2\u00bd\26\3\2\2\2\u00be\u00bf\7c\2\2\u00bf\u00c0"+
		"\7p\2\2\u00c0\u00c1\7{\2\2\u00c1\30\3\2\2\2\u00c2\u00c3\7i\2\2\u00c3\u00c4"+
		"\7g\2\2\u00c4\u00c5\7v\2\2\u00c5\u00c6\7t\2\2\u00c6\u00c7\7c\2\2\u00c7"+
		"\u00c8\7f\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca\7w\2\2\u00ca\u00cb\7u\2\2"+
		"\u00cb\32\3\2\2\2\u00cc\u00cd\7i\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf\7"+
		"v\2\2\u00cf\u00d0\7z\2\2\u00d0\34\3\2\2\2\u00d1\u00d2\7i\2\2\u00d2\u00d3"+
		"\7g\2\2\u00d3\u00d4\7v\2\2\u00d4\u00d5\7{\2\2\u00d5\36\3\2\2\2\u00d6\u00d7"+
		"\7i\2\2\u00d7\u00d8\7g\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da\7x\2\2\u00da"+
		"\u00db\7z\2\2\u00db \3\2\2\2\u00dc\u00dd\7i\2\2\u00dd\u00de\7g\2\2\u00de"+
		"\u00df\7v\2\2\u00df\u00e0\7x\2\2\u00e0\u00e1\7{\2\2\u00e1\"\3\2\2\2\u00e2"+
		"\u00e3\7i\2\2\u00e3\u00e4\7g\2\2\u00e4\u00e5\7v\2\2\u00e5\u00e6\7f\2\2"+
		"\u00e6\u00e7\7k\2\2\u00e7\u00e8\7t\2\2\u00e8$\3\2\2\2\u00e9\u00ea\7u\2"+
		"\2\u00ea\u00eb\7s\2\2\u00eb\u00ec\7t\2\2\u00ec\u00ed\7v\2\2\u00ed&\3\2"+
		"\2\2\u00ee\u00ef\7u\2\2\u00ef\u00f0\7k\2\2\u00f0\u00f1\7p\2\2\u00f1(\3"+
		"\2\2\2\u00f2\u00f3\7e\2\2\u00f3\u00f4\7q\2\2\u00f4\u00f5\7u\2\2\u00f5"+
		"*\3\2\2\2\u00f6\u00f7\7#\2\2\u00f7,\3\2\2\2\u00f8\u00f9\7v\2\2\u00f9\u00fa"+
		"\7j\2\2\u00fa\u00fb\7t\2\2\u00fb\u00fc\7w\2\2\u00fc\u00fd\7u\2\2\u00fd"+
		"\u00fe\7v\2\2\u00fe.\3\2\2\2\u00ff\u0100\7v\2\2\u0100\u0101\7j\2\2\u0101"+
		"\u0102\7t\2\2\u0102\u0103\7w\2\2\u0103\u0104\7u\2\2\u0104\u0105\7v\2\2"+
		"\u0105\u0106\7a\2\2\u0106\u0107\7q\2\2\u0107\u0108\7h\2\2\u0108\u0109"+
		"\7h\2\2\u0109\60\3\2\2\2\u010a\u010b\7v\2\2\u010b\u010c\7w\2\2\u010c\u010d"+
		"\7t\2\2\u010d\u010e\7p\2\2\u010e\62\3\2\2\2\u010f\u0110\7h\2\2\u0110\u0111"+
		"\7k\2\2\u0111\u0112\7t\2\2\u0112\u0113\7g\2\2\u0113\64\3\2\2\2\u0114\u0115"+
		"\7u\2\2\u0115\u0116\7m\2\2\u0116\u0117\7k\2\2\u0117\u0118\7r\2\2\u0118"+
		"\66\3\2\2\2\u0119\u011a\7r\2\2\u011a\u011b\7t\2\2\u011b\u011c\7k\2\2\u011c"+
		"\u011d\7p\2\2\u011d\u011e\7v\2\2\u011e8\3\2\2\2\u011f\u0120\7k\2\2\u0120"+
		"\u0121\7h\2\2\u0121:\3\2\2\2\u0122\u0123\7v\2\2\u0123\u0124\7j\2\2\u0124"+
		"\u0125\7g\2\2\u0125\u0126\7p\2\2\u0126<\3\2\2\2\u0127\u0128\7g\2\2\u0128"+
		"\u0129\7n\2\2\u0129\u012a\7u\2\2\u012a\u012b\7g\2\2\u012b>\3\2\2\2\u012c"+
		"\u012d\7y\2\2\u012d\u012e\7j\2\2\u012e\u012f\7k\2\2\u012f\u0130\7n\2\2"+
		"\u0130\u0131\7g\2\2\u0131@\3\2\2\2\u0132\u0133\7f\2\2\u0133\u0134\7q\2"+
		"\2\u0134B\3\2\2\2\u0135\u0136\7h\2\2\u0136\u0137\7q\2\2\u0137\u0138\7"+
		"t\2\2\u0138\u0139\7g\2\2\u0139\u013a\7c\2\2\u013a\u013b\7e\2\2\u013b\u013c"+
		"\7j\2\2\u013cD\3\2\2\2\u013d\u013e\7<\2\2\u013e\u013f\7?\2\2\u013fF\3"+
		"\2\2\2\u0140\u0141\7,\2\2\u0141H\3\2\2\2\u0142\u0143\7\61\2\2\u0143J\3"+
		"\2\2\2\u0144\u0145\7-\2\2\u0145L\3\2\2\2\u0146\u0147\7/\2\2\u0147N\3\2"+
		"\2\2\u0148\u0149\7?\2\2\u0149\u014a\7?\2\2\u014aP\3\2\2\2\u014b\u014c"+
		"\7#\2\2\u014c\u014d\7?\2\2\u014dR\3\2\2\2\u014e\u014f\7>\2\2\u014fT\3"+
		"\2\2\2\u0150\u0151\7@\2\2\u0151V\3\2\2\2\u0152\u0153\7>\2\2\u0153\u0154"+
		"\7?\2\2\u0154X\3\2\2\2\u0155\u0156\7@\2\2\u0156\u0157\7?\2\2\u0157Z\3"+
		"\2\2\2\u0158\u0159\7(\2\2\u0159\u015a\7(\2\2\u015a\\\3\2\2\2\u015b\u015c"+
		"\7~\2\2\u015c\u015d\7~\2\2\u015d^\3\2\2\2\u015e\u0161\5c\62\2\u015f\u0161"+
		"\5a\61\2\u0160\u015e\3\2\2\2\u0160\u015f\3\2\2\2\u0161`\3\2\2\2\u0162"+
		"\u0163\5c\62\2\u0163\u0165\7\60\2\2\u0164\u0166\4\62;\2\u0165\u0164\3"+
		"\2\2\2\u0166\u0167\3\2\2\2\u0167\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168"+
		"b\3\2\2\2\u0169\u016b\t\2\2\2\u016a\u0169\3\2\2\2\u016a\u016b\3\2\2\2"+
		"\u016b\u016c\3\2\2\2\u016c\u0170\4\62;\2\u016d\u016f\4\62;\2\u016e\u016d"+
		"\3\2\2\2\u016f\u0172\3\2\2\2\u0170\u016e\3\2\2\2\u0170\u0171\3\2\2\2\u0171"+
		"d\3\2\2\2\u0172\u0170\3\2\2\2\u0173\u0179\5g\64\2\u0174\u0178\5g\64\2"+
		"\u0175\u0178\5m\67\2\u0176\u0178\7a\2\2\u0177\u0174\3\2\2\2\u0177\u0175"+
		"\3\2\2\2\u0177\u0176\3\2\2\2\u0178\u017b\3\2\2\2\u0179\u0177\3\2\2\2\u0179"+
		"\u017a\3\2\2\2\u017af\3\2\2\2\u017b\u0179\3\2\2\2\u017c\u017f\5i\65\2"+
		"\u017d\u017f\5k\66\2\u017e\u017c\3\2\2\2\u017e\u017d\3\2\2\2\u017fh\3"+
		"\2\2\2\u0180\u0181\4c|\2\u0181j\3\2\2\2\u0182\u0183\4C\\\2\u0183l\3\2"+
		"\2\2\u0184\u0185\4\62;\2\u0185n\3\2\2\2\u0186\u0187\7*\2\2\u0187p\3\2"+
		"\2\2\u0188\u0189\7+\2\2\u0189r\3\2\2\2\u018a\u018b\7}\2\2\u018bt\3\2\2"+
		"\2\u018c\u018d\7\177\2\2\u018dv\3\2\2\2\u018e\u018f\7=\2\2\u018fx\3\2"+
		"\2\2\u0190\u0191\7.\2\2\u0191z\3\2\2\2\u0192\u0194\t\3\2\2\u0193\u0192"+
		"\3\2\2\2\u0194\u0195\3\2\2\2\u0195\u0193\3\2\2\2\u0195\u0196\3\2\2\2\u0196"+
		"\u0197\3\2\2\2\u0197\u0198\b>\2\2\u0198|\3\2\2\2\u0199\u019a\7\61\2\2"+
		"\u019a\u019b\7\61\2\2\u019b\u019f\3\2\2\2\u019c\u019e\n\4\2\2\u019d\u019c"+
		"\3\2\2\2\u019e\u01a1\3\2\2\2\u019f\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0"+
		"\u01a2\3\2\2\2\u01a1\u019f\3\2\2\2\u01a2\u01a3\5\177@\2\u01a3\u01a4\3"+
		"\2\2\2\u01a4\u01a5\b?\3\2\u01a5~\3\2\2\2\u01a6\u01a8\7\17\2\2\u01a7\u01a6"+
		"\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9\u01ab\7\f\2\2\u01aa"+
		"\u01a7\3\2\2\2\u01ab\u01ac\3\2\2\2\u01ac\u01aa\3\2\2\2\u01ac\u01ad\3\2"+
		"\2\2\u01ad\u0080\3\2\2\2\16\2\u0160\u0167\u016a\u0170\u0177\u0179\u017e"+
		"\u0195\u019f\u01a7\u01ac";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}