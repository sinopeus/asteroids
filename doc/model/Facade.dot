#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// model.Facade
	c8592 [label=<<table title="model.Facade" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Facade.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Facade </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Facade() </td></tr>
<tr><td align="left" balign="left"> + createWorld(width : double, height : double) : World </td></tr>
<tr><td align="left" balign="left"> + getWorldWidth(world : World) : double </td></tr>
<tr><td align="left" balign="left"> + getWorldHeight(world : World) : double </td></tr>
<tr><td align="left" balign="left"> + getShips(world : World) : Set&lt;Ship&gt; </td></tr>
<tr><td align="left" balign="left"> + getAsteroids(world : World) : Set&lt;Asteroid&gt; </td></tr>
<tr><td align="left" balign="left"> + getBullets(world : World) : Set&lt;Bullet&gt; </td></tr>
<tr><td align="left" balign="left"> + addShip(world : World, ship : Ship) </td></tr>
<tr><td align="left" balign="left"> + addAsteroid(world : World, asteroid : Asteroid) </td></tr>
<tr><td align="left" balign="left"> + removeShip(world : World, ship : Ship) </td></tr>
<tr><td align="left" balign="left"> + removeAsteroid(world : World, asteroid : Asteroid) </td></tr>
<tr><td align="left" balign="left"> + evolve(world : World, dt : double, collisionListener : CollisionListener) </td></tr>
<tr><td align="left" balign="left"> + createShip(x : double, y : double, xVelocity : double, yVelocity : double, radius : double, direction : double, mass : double) : Ship </td></tr>
<tr><td align="left" balign="left"> + isShip(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getShipX(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipY(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipXVelocity(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipYVelocity(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipRadius(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipDirection(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipMass(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipWorld(ship : Ship) : World </td></tr>
<tr><td align="left" balign="left"> + isShipThrusterActive(ship : Ship) : boolean </td></tr>
<tr><td align="left" balign="left"> + setThrusterActive(ship : Ship, active : boolean) </td></tr>
<tr><td align="left" balign="left"> + turn(ship : Ship, angle : double) </td></tr>
<tr><td align="left" balign="left"> + canFire(ship : Ship) : boolean </td></tr>
<tr><td align="left" balign="left"> + fireBullet(ship : Ship) </td></tr>
<tr><td align="left" balign="left"> + createAsteroid(x : double, y : double, xVelocity : double, yVelocity : double, radius : double) : Asteroid </td></tr>
<tr><td align="left" balign="left"> + createAsteroid(x : double, y : double, xVelocity : double, yVelocity : double, radius : double, random : Random) : Asteroid </td></tr>
<tr><td align="left" balign="left"> + isAsteroid(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAsteroidX(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidY(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidXVelocity(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidYVelocity(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidRadius(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidMass(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidWorld(asteroid : Asteroid) : World </td></tr>
<tr><td align="left" balign="left"> + isBullets(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getBulletX(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletY(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletXVelocity(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletYVelocity(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletRadius(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletMass(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletWorld(bullet : Bullet) : World </td></tr>
<tr><td align="left" balign="left"> + getBulletSource(bullet : Bullet) : Ship </td></tr>
<tr><td align="left" balign="left"> + parseProgram(text : String) : IFacade.ParseOutcome&lt;Program&gt; </td></tr>
<tr><td align="left" balign="left"> + loadProgramFromStream(stream : InputStream) : IFacade.ParseOutcome&lt;Program&gt; </td></tr>
<tr><td align="left" balign="left"> + loadProgramFromUrl(url : URL) : IFacade.ParseOutcome&lt;Program&gt; </td></tr>
<tr><td align="left" balign="left"> + isTypeCheckingSupported() : boolean </td></tr>
<tr><td align="left" balign="left"> + typeCheckProgram(program : Program) : IFacade.TypeCheckOutcome </td></tr>
<tr><td align="left" balign="left"> + setShipProgram(ship : Ship, program : Program) </td></tr>
		</table></td></tr>
		</table>>, URL="./Facade.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// model.IFacade<World, Ship, Asteroid, Bullet, Program>
	c8593 [label=<<table title="model.IFacade" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./IFacade.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IFacade&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + createWorld(width : double, height : double) : World </td></tr>
<tr><td align="left" balign="left"> + getWorldWidth(world : World) : double </td></tr>
<tr><td align="left" balign="left"> + getWorldHeight(world : World) : double </td></tr>
<tr><td align="left" balign="left"> + getShips(world : World) : Set&lt;Ship&gt; </td></tr>
<tr><td align="left" balign="left"> + getAsteroids(world : World) : Set&lt;Asteroid&gt; </td></tr>
<tr><td align="left" balign="left"> + getBullets(world : World) : Set&lt;Bullet&gt; </td></tr>
<tr><td align="left" balign="left"> + addShip(world : World, ship : Ship) </td></tr>
<tr><td align="left" balign="left"> + addAsteroid(world : World, asteroid : Asteroid) </td></tr>
<tr><td align="left" balign="left"> + removeShip(world : World, ship : Ship) </td></tr>
<tr><td align="left" balign="left"> + removeAsteroid(world : World, asteroid : Asteroid) </td></tr>
<tr><td align="left" balign="left"> + evolve(world : World, dt : double, collisionListener : CollisionListener) </td></tr>
<tr><td align="left" balign="left"> + createShip(x : double, y : double, xVelocity : double, yVelocity : double, radius : double, direction : double, mass : double) : Ship </td></tr>
<tr><td align="left" balign="left"> + isShip(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getShipX(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipY(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipXVelocity(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipYVelocity(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipRadius(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipDirection(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipMass(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipWorld(ship : Ship) : World </td></tr>
<tr><td align="left" balign="left"> + isShipThrusterActive(ship : Ship) : boolean </td></tr>
<tr><td align="left" balign="left"> + setThrusterActive(ship : Ship, active : boolean) </td></tr>
<tr><td align="left" balign="left"> + canFire(ship : Ship) : boolean </td></tr>
<tr><td align="left" balign="left"> + turn(ship : Ship, angle : double) </td></tr>
<tr><td align="left" balign="left"> + fireBullet(ship : Ship) </td></tr>
<tr><td align="left" balign="left"> + createAsteroid(x : double, y : double, xVelocity : double, yVelocity : double, radius : double) : Asteroid </td></tr>
<tr><td align="left" balign="left"> + createAsteroid(x : double, y : double, xVelocity : double, yVelocity : double, radius : double, random : Random) : Asteroid </td></tr>
<tr><td align="left" balign="left"> + isAsteroid(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAsteroidX(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidY(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidXVelocity(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidYVelocity(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidRadius(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidMass(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidWorld(asteroid : Asteroid) : World </td></tr>
<tr><td align="left" balign="left"> + isBullets(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getBulletX(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletY(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletXVelocity(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletYVelocity(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletRadius(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletMass(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletWorld(bullet : Bullet) : World </td></tr>
<tr><td align="left" balign="left"> + getBulletSource(bullet : Bullet) : Ship </td></tr>
<tr><td align="left" balign="left"> + parseProgram(text : String) : IFacade.ParseOutcome&lt;Program&gt; </td></tr>
<tr><td align="left" balign="left"> + loadProgramFromStream(stream : InputStream) : IFacade.ParseOutcome&lt;Program&gt; </td></tr>
<tr><td align="left" balign="left"> + loadProgramFromUrl(url : URL) : IFacade.ParseOutcome&lt;Program&gt; </td></tr>
<tr><td align="left" balign="left"> + isTypeCheckingSupported() : boolean </td></tr>
<tr><td align="left" balign="left"> + typeCheckProgram(program : Program) : IFacade.TypeCheckOutcome </td></tr>
<tr><td align="left" balign="left"> + setShipProgram(ship : Ship, program : Program) </td></tr>
		</table></td></tr>
		</table>>, URL="./IFacade.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//model.Facade implements model.IFacade<World, Ship, Asteroid, Bullet, Program>
	c8593:p -> c8592:p [dir=back,arrowtail=empty,style=dashed];
}

