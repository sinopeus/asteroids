#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// model.programs.parsing.language.expression.second_order.Or
	c13412 [label=<<table title="model.programs.parsing.language.expression.second_order.Or" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Or.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Or </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Or(line : int, column : int, firstArgument : Expression, secondArgument : Expression) </td></tr>
<tr><td align="left" balign="left"> # function(first : BooleanLiteral, second : BooleanLiteral) : BooleanLiteral </td></tr>
		</table></td></tr>
		</table>>, URL="./Or.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// model.programs.parsing.language.expression.second_order.SecondOrderExpressionOfBooleansToBoolean
	c13422 [label=<<table title="model.programs.parsing.language.expression.second_order.SecondOrderExpressionOfBooleansToBoolean" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SecondOrderExpressionOfBooleansToBoolean.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> SecondOrderExpressionOfBooleansToBoolean </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # SecondOrderExpressionOfBooleansToBoolean(line : int, column : int, firstArgument : Expression, secondArgument : Expression) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> # function(first : BooleanLiteral, second : BooleanLiteral) : BooleanLiteral </font></td></tr>
<tr><td align="left" balign="left"> + isTypeSafe() : IFacade.TypeCheckOutcome </td></tr>
<tr><td align="left" balign="left"> + getType() : Type </td></tr>
<tr><td align="left" balign="left"> + evaluate() : BooleanLiteral </td></tr>
		</table></td></tr>
		</table>>, URL="./SecondOrderExpressionOfBooleansToBoolean.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//model.programs.parsing.language.expression.second_order.Or extends model.programs.parsing.language.expression.second_order.SecondOrderExpressionOfBooleansToBoolean
	c13422:p -> c13412:p [dir=back,arrowtail=empty];
}

