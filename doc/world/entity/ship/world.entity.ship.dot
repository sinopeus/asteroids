#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// world.entity.ship.Thruster
	c1983 [label=<<table title="world.entity.ship.Thruster" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Thruster.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Thruster </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - maximumThrustPerSecond : double </td></tr>
<tr><td align="left" balign="left"> - isActivated : boolean </td></tr>
<tr><td align="left" balign="left"> - ownerShip : Ship </td></tr>
<tr><td align="left" balign="left"> - isTerminated : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Thruster(maximumThrust : double, owner : Ship) </td></tr>
<tr><td align="left" balign="left"> + getMaximumThrustPerSecond() : double </td></tr>
<tr><td align="left" balign="left"> # canHaveAsMaximumThrust(maximumThrust : double) : boolean </td></tr>
<tr><td align="left" balign="left"> # setMaximumThrustPerSecond(maximumThrust : double) </td></tr>
<tr><td align="left" balign="left"> + isActivated() : boolean </td></tr>
<tr><td align="left" balign="left"> + activate() </td></tr>
<tr><td align="left" balign="left"> + deactivate() </td></tr>
<tr><td align="left" balign="left"> + toggleActivation() </td></tr>
<tr><td align="left" balign="left"> + getOwner() : Ship </td></tr>
<tr><td align="left" balign="left"> # canHaveAsOwner(owner : Ship) : boolean </td></tr>
<tr><td align="left" balign="left"> + setOwner(owner : Ship) </td></tr>
<tr><td align="left" balign="left"> + terminate() </td></tr>
<tr><td align="left" balign="left"> + isTerminated() : boolean </td></tr>
<tr><td align="left" balign="left"> + thrust(duration : double) </td></tr>
<tr><td align="left" balign="left"> + thrust(thrustPerSecond : double, duration : double) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./Thruster.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// world.entity.ship.Ship
	c1984 [label=<<table title="world.entity.ship.Ship" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Ship.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Ship </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - minimumRadius : double </td></tr>
<tr><td align="left" balign="left"> - thruster : Thruster </td></tr>
<tr><td align="left" balign="left"> - bulletList : ArrayList&lt;Bullet&gt; </td></tr>
<tr><td align="left" balign="left"> ~ program : Program </td></tr>
<tr><td align="left" balign="left"> - thrustPerSecond : double </td></tr>
<tr><td align="left" balign="left"> - MAXIMUM_AMOUNT_OF_BULLETS : byte </td></tr>
<tr><td align="left" balign="left"> - SPEED_OF_ACTIONS : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Ship(direction : Direction, position : Position, speedLimit : double, velocity : Velocity, shape : CircleShape, mass : Mass) </td></tr>
<tr><td align="left" balign="left"> + Ship() </td></tr>
<tr><td align="left" balign="left"> # canHaveAsShape(shape : CircleShape) : boolean </td></tr>
<tr><td align="left" balign="left"> + getMinimumRadius() : double </td></tr>
<tr><td align="left" balign="left"> + getThruster() : Thruster </td></tr>
<tr><td align="left" balign="left"> # canHaveAsThruster(thruster : Thruster) : boolean </td></tr>
<tr><td align="left" balign="left"> # setThruster(thruster : Thruster) </td></tr>
<tr><td align="left" balign="left"> + getBulletList() : ArrayList&lt;Bullet&gt; </td></tr>
<tr><td align="left" balign="left"> # canHaveAsBulletList(bullets : ArrayList&lt;Bullet&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> # setBulletList(bullets : ArrayList&lt;Bullet&gt;) </td></tr>
<tr><td align="left" balign="left"> + getProgram() : Program </td></tr>
<tr><td align="left" balign="left"> # canHaveAsProgram(program : Program) : boolean </td></tr>
<tr><td align="left" balign="left"> + setProgram(program : Program) </td></tr>
<tr><td align="left" balign="left"> + terminate() </td></tr>
<tr><td align="left" balign="left"> + advance(dt : double) </td></tr>
<tr><td align="left" balign="left"> + canFire() : boolean </td></tr>
<tr><td align="left" balign="left"> + fire() </td></tr>
<tr><td align="left" balign="left"> # collideWith(that : Asteroid) </td></tr>
<tr><td align="left" balign="left"> # collideWith(that : Bullet) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getThrustPerSecond() : double </td></tr>
		</table></td></tr>
		</table>>, URL="./Ship.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// world.entity.ship.Thruster NAVASSOC world.entity.ship.Ship
	c1983:p -> c1984:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// world.entity.ship.Ship NAVASSOC world.entity.ship.Thruster
	c1984:p -> c1983:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

