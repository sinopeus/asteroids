#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// world.World
	c1729 [label=<<table title="world.World" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./World.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> World </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - xSize : double </td></tr>
<tr><td align="left" balign="left"> - ySize : double </td></tr>
<tr><td align="left" balign="left"> - gameTime : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + World(xSize : double, ySize : double) </td></tr>
<tr><td align="left" balign="left"> + World() </td></tr>
<tr><td align="left" balign="left"> + getxSize() : double </td></tr>
<tr><td align="left" balign="left"> # setXSize(xSize : double) </td></tr>
<tr><td align="left" balign="left"> + getySize() : double </td></tr>
<tr><td align="left" balign="left"> # setYSize(ySize : double) </td></tr>
<tr><td align="left" balign="left"> # canHaveAsSize(size : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + getGameTime() : double </td></tr>
<tr><td align="left" balign="left"> # canHaveAsGameTime(gameTime : double) : boolean </td></tr>
<tr><td align="left" balign="left"> # setGameTime(gameTime : double) </td></tr>
<tr><td align="left" balign="left"> # advandeGameTime(time : double) </td></tr>
<tr><td align="left" balign="left"> - canHaveAsEntity(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> + add(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> + evolve(dt : double, coll : CollisionListener) </td></tr>
<tr><td align="left" balign="left"> - getNextCollision() : Collision </td></tr>
<tr><td align="left" balign="left"> - advanceAll(dt : double) </td></tr>
<tr><td align="left" balign="left"> + isInWorld(position : Position) : boolean </td></tr>
<tr><td align="left" balign="left"> - isInWorld(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> - isSpaceForEntity(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> + numberOfEntities() : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./World.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

