#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// main.Sound
	c8826 [label=<<table title="main.Sound" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Sound.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Sound </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + play(name : String) </td></tr>
<tr><td align="left" balign="left"> + stop(name : String) </td></tr>
<tr><td align="left" balign="left"> + loop(name : String) </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
		</table></td></tr>
		</table>>, URL="./Sound.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// main.FileSoundManager
	c8835 [label=<<table title="main.FileSoundManager" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./FileSoundManager.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FileSoundManager </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ clips : HashMap&lt;String, Clip&gt; </td></tr>
<tr><td align="left" balign="left"> ~ requests : Queue&lt;FileSoundManager.Request&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FileSoundManager(path : String) </td></tr>
<tr><td align="left" balign="left"> - loadSounds(path : String) </td></tr>
<tr><td align="left" balign="left"> + play(name : String) </td></tr>
<tr><td align="left" balign="left"> + loop(name : String) </td></tr>
<tr><td align="left" balign="left"> + stop(name : String) </td></tr>
<tr><td align="left" balign="left"> + addRequest(request : FileSoundManager.Request) </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
		</table></td></tr>
		</table>>, URL="./FileSoundManager.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//main.FileSoundManager implements java.lang.Runnable
	c8950:p -> c8835:p [dir=back,arrowtail=empty,style=dashed];
	//main.FileSoundManager implements main.Sound
	c8826:p -> c8835:p [dir=back,arrowtail=empty,style=dashed];
	// main.FileSoundManager NAVASSOC java.util.HashMap<K, V>
	c8835:p -> c8953:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// main.FileSoundManager NAVASSOC java.util.Queue<E>
	c8835:p -> c8954:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// java.lang.Runnable
	c8950 [label=<<table title="java.lang.Runnable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Runnable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Runnable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Runnable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.HashMap<K, V>
	c8953 [label=<<table title="java.util.HashMap" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/HashMap.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HashMap&lt;K, V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ DEFAULT_INITIAL_CAPACITY : int </td></tr>
<tr><td align="left" balign="left"> ~ MAXIMUM_CAPACITY : int </td></tr>
<tr><td align="left" balign="left"> ~ DEFAULT_LOAD_FACTOR : float </td></tr>
<tr><td align="left" balign="left"> ~ table : HashMap.Entry&lt;K, V&gt;[] </td></tr>
<tr><td align="left" balign="left"> ~ size : int </td></tr>
<tr><td align="left" balign="left"> ~ threshold : int </td></tr>
<tr><td align="left" balign="left"> ~ loadFactor : float </td></tr>
<tr><td align="left" balign="left"> ~ modCount : int </td></tr>
<tr><td align="left" balign="left"> ~ ALTERNATIVE_HASHING_THRESHOLD_DEFAULT : int </td></tr>
<tr><td align="left" balign="left"> ~ useAltHashing : boolean </td></tr>
<tr><td align="left" balign="left"> ~ hashSeed : int </td></tr>
<tr><td align="left" balign="left"> - entrySet : Set&lt;Map.Entry&lt;K, V&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HashMap(arg0 : int, arg1 : float) </td></tr>
<tr><td align="left" balign="left"> + HashMap(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + HashMap() </td></tr>
<tr><td align="left" balign="left"> + HashMap(arg0 : Map&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> ~ init() </td></tr>
<tr><td align="left" balign="left"> ~ hash(arg0 : Object) : int </td></tr>
<tr><td align="left" balign="left"> ~ indexFor(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + get(arg0 : Object) : V </td></tr>
<tr><td align="left" balign="left"> - getForNullKey() : V </td></tr>
<tr><td align="left" balign="left"> + containsKey(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ getEntry(arg0 : Object) : HashMap.Entry&lt;K, V&gt; </td></tr>
<tr><td align="left" balign="left"> + put(arg0 : K, arg1 : V) : V </td></tr>
<tr><td align="left" balign="left"> - putForNullKey(arg0 : V) : V </td></tr>
<tr><td align="left" balign="left"> - putForCreate(arg0 : K, arg1 : V) </td></tr>
<tr><td align="left" balign="left"> - putAllForCreate(arg0 : Map&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> ~ resize(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> ~ transfer(arg0 : HashMap.Entry&lt;&gt;[], arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + putAll(arg0 : Map&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Object) : V </td></tr>
<tr><td align="left" balign="left"> ~ removeEntryForKey(arg0 : Object) : HashMap.Entry&lt;K, V&gt; </td></tr>
<tr><td align="left" balign="left"> ~ removeMapping(arg0 : Object) : HashMap.Entry&lt;K, V&gt; </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + containsValue(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> - containsNullValue() : boolean </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> ~ addEntry(arg0 : int, arg1 : K, arg2 : V, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> ~ createEntry(arg0 : int, arg1 : K, arg2 : V, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> ~ newKeyIterator() : Iterator&lt;K&gt; </td></tr>
<tr><td align="left" balign="left"> ~ newValueIterator() : Iterator&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> ~ newEntryIterator() : Iterator&lt;Map.Entry&lt;K, V&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + keySet() : Set&lt;K&gt; </td></tr>
<tr><td align="left" balign="left"> + values() : Collection&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + entrySet() : Set&lt;Map.Entry&lt;K, V&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - entrySet0() : Set&lt;Map.Entry&lt;K, V&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : ObjectInputStream) </td></tr>
<tr><td align="left" balign="left"> ~ capacity() : int </td></tr>
<tr><td align="left" balign="left"> ~ loadFactor() : float </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/util/HashMap.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.Queue<E>
	c8954 [label=<<table title="java.util.Queue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Queue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Queue&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + add(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + offer(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + remove() : E </td></tr>
<tr><td align="left" balign="left"> + poll() : E </td></tr>
<tr><td align="left" balign="left"> + element() : E </td></tr>
<tr><td align="left" balign="left"> + peek() : E </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Queue.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

