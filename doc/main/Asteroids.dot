#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// main.Sound
	c3526 [label=<<table title="main.Sound" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Sound.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Sound </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + play(name : String) </td></tr>
<tr><td align="left" balign="left"> + stop(name : String) </td></tr>
<tr><td align="left" balign="left"> + loop(name : String) </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
		</table></td></tr>
		</table>>, URL="./Sound.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// main.Asteroids<World, Ship, Asteroid, Bullet, Program>
	c3527 [label=<<table title="main.Asteroids" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Asteroids.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Asteroids&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - menu : AsteroidsMenu&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
<tr><td align="left" balign="left"> - view : WorldView&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
<tr><td align="left" balign="left"> - facade : IFacade&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
<tr><td align="left" balign="left"> - width : int </td></tr>
<tr><td align="left" balign="left"> - height : int </td></tr>
<tr><td align="left" balign="left"> - sound : Sound </td></tr>
<tr><td align="left" balign="left"> - aiProgramUrl : URL </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Asteroids(facade : IFacade&lt;World, Ship, Asteroid, Bullet, Program&gt;, width : int, height : int, undecorated : boolean, sound : Sound, aiProgramUrl : URL) </td></tr>
<tr><td align="left" balign="left"> + getWidth() : int </td></tr>
<tr><td align="left" balign="left"> + getHeight() : int </td></tr>
<tr><td align="left" balign="left"> + getSound() : Sound </td></tr>
<tr><td align="left" balign="left"> + getFacade() : IFacade&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
<tr><td align="left" balign="left"> + startSinglePlayerGame() </td></tr>
<tr><td align="left" balign="left"> + startMultiPlayerGame(vsAI : boolean) </td></tr>
<tr><td align="left" balign="left"> + showMenu() </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, URL="./Asteroids.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// main.WorldView<World, Ship, Asteroid, Bullet, Program>
	c3529 [label=<<table title="main.WorldView" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WorldView.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WorldView&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LEFT_P1 : int </td></tr>
<tr><td align="left" balign="left"> - RIGHT_P1 : int </td></tr>
<tr><td align="left" balign="left"> - FIRE_P1 : int </td></tr>
<tr><td align="left" balign="left"> - THRUSTER_P1 : int </td></tr>
<tr><td align="left" balign="left"> - LEFT_P2 : int </td></tr>
<tr><td align="left" balign="left"> - RIGHT_P2 : int </td></tr>
<tr><td align="left" balign="left"> - FIRE_P2 : int </td></tr>
<tr><td align="left" balign="left"> - THRUSTER_P2 : int </td></tr>
<tr><td align="left" balign="left"> - TIMER_DELAY : int </td></tr>
<tr><td align="left" balign="left"> - game : Asteroids&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
<tr><td align="left" balign="left"> - facade : IFacade&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
<tr><td align="left" balign="left"> - world : World </td></tr>
<tr><td align="left" balign="left"> - player1 : Ship </td></tr>
<tr><td align="left" balign="left"> - player2 : Ship </td></tr>
<tr><td align="left" balign="left"> - player2IsAI : boolean </td></tr>
<tr><td align="left" balign="left"> - player1_angle : double </td></tr>
<tr><td align="left" balign="left"> - player2_angle : double </td></tr>
<tr><td align="left" balign="left"> - player1_fire : boolean </td></tr>
<tr><td align="left" balign="left"> - player2_fire : boolean </td></tr>
<tr><td align="left" balign="left"> - timer : Timer </td></tr>
<tr><td align="left" balign="left"> - timeAfterLastEvolve : long </td></tr>
<tr><td align="left" balign="left"> - background : Image </td></tr>
<tr><td align="left" balign="left"> - msg : String </td></tr>
<tr><td align="left" balign="left"> - visualizations : Map&lt;Object, WorldView.Visualization&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - explosions : Set&lt;Explosion&gt; </td></tr>
<tr><td align="left" balign="left"> - asteroidImages : Image[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + WorldView(game : Asteroids&lt;World, Ship, Asteroid, Bullet, Program&gt;, world : World, player1 : Ship, player2 : Ship, player2IsAI : boolean) </td></tr>
<tr><td align="left" balign="left"> + isFocusable() : boolean </td></tr>
<tr><td align="left" balign="left"> - drawCenteredString(g2d : Graphics2D, txt : String, y : int) </td></tr>
<tr><td align="left" balign="left"> - drawCenteredString(g2d : Graphics2D, txt : String) </td></tr>
<tr><td align="left" balign="left"> # paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + keyTyped(e : KeyEvent) </td></tr>
<tr><td align="left" balign="left"> + keyPressed(e : KeyEvent) </td></tr>
<tr><td align="left" balign="left"> + keyReleased(e : KeyEvent) </td></tr>
<tr><td align="left" balign="left"> + actionPerformed(e : ActionEvent) </td></tr>
<tr><td align="left" balign="left"> + startGame() </td></tr>
<tr><td align="left" balign="left"> + boundaryCollision(entity : Object, x : double, y : double) </td></tr>
<tr><td align="left" balign="left"> + objectCollision(entity1 : Object, entity2 : Object, x : double, y : double) </td></tr>
<tr><td align="left" balign="left"> - getImages() : Image[] </td></tr>
		</table></td></tr>
		</table>>, URL="./WorldView.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// main.AsteroidsMenu<World, Ship, Asteroid, Bullet, Program>
	c3531 [label=<<table title="main.AsteroidsMenu" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AsteroidsMenu.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AsteroidsMenu&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - menu_options : String[] </td></tr>
<tr><td align="left" balign="left"> - selectedIndex : int </td></tr>
<tr><td align="left" balign="left"> - game : Asteroids&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
<tr><td align="left" balign="left"> - background : Image </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AsteroidsMenu(game : Asteroids&lt;World, Ship, Asteroid, Bullet, Program&gt;) </td></tr>
<tr><td align="left" balign="left"> + isFocusable() : boolean </td></tr>
<tr><td align="left" balign="left"> - drawCenteredString(g2d : Graphics2D, txt : String, y : int) </td></tr>
<tr><td align="left" balign="left"> # paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + keyTyped(e : KeyEvent) </td></tr>
<tr><td align="left" balign="left"> + getPreferredSize() : Dimension </td></tr>
<tr><td align="left" balign="left"> + keyPressed(e : KeyEvent) </td></tr>
<tr><td align="left" balign="left"> + keyReleased(e : KeyEvent) </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
		</table></td></tr>
		</table>>, URL="./AsteroidsMenu.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// model.IFacade<World, Ship, Asteroid, Bullet, Program>
	c3542 [label=<<table title="model.IFacade" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../model/IFacade.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IFacade&lt;World, Ship, Asteroid, Bullet, Program&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + createWorld(width : double, height : double) : World </td></tr>
<tr><td align="left" balign="left"> + getWorldWidth(world : World) : double </td></tr>
<tr><td align="left" balign="left"> + getWorldHeight(world : World) : double </td></tr>
<tr><td align="left" balign="left"> + getShips(world : World) : Set&lt;Ship&gt; </td></tr>
<tr><td align="left" balign="left"> + getAsteroids(world : World) : Set&lt;Asteroid&gt; </td></tr>
<tr><td align="left" balign="left"> + getBullets(world : World) : Set&lt;Bullet&gt; </td></tr>
<tr><td align="left" balign="left"> + addShip(world : World, ship : Ship) </td></tr>
<tr><td align="left" balign="left"> + addAsteroid(world : World, asteroid : Asteroid) </td></tr>
<tr><td align="left" balign="left"> + removeShip(world : World, ship : Ship) </td></tr>
<tr><td align="left" balign="left"> + removeAsteroid(world : World, asteroid : Asteroid) </td></tr>
<tr><td align="left" balign="left"> + evolve(world : World, dt : double, collisionListener : CollisionListener) </td></tr>
<tr><td align="left" balign="left"> + createShip(x : double, y : double, xVelocity : double, yVelocity : double, radius : double, direction : double, mass : double) : Ship </td></tr>
<tr><td align="left" balign="left"> + isShip(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getShipX(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipY(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipXVelocity(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipYVelocity(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipRadius(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipDirection(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipMass(ship : Ship) : double </td></tr>
<tr><td align="left" balign="left"> + getShipWorld(ship : Ship) : World </td></tr>
<tr><td align="left" balign="left"> + isShipThrusterActive(ship : Ship) : boolean </td></tr>
<tr><td align="left" balign="left"> + setThrusterActive(ship : Ship, active : boolean) </td></tr>
<tr><td align="left" balign="left"> + canFire(ship : Ship) : boolean </td></tr>
<tr><td align="left" balign="left"> + turn(ship : Ship, angle : double) </td></tr>
<tr><td align="left" balign="left"> + fireBullet(ship : Ship) </td></tr>
<tr><td align="left" balign="left"> + createAsteroid(x : double, y : double, xVelocity : double, yVelocity : double, radius : double) : Asteroid </td></tr>
<tr><td align="left" balign="left"> + createAsteroid(x : double, y : double, xVelocity : double, yVelocity : double, radius : double, random : Random) : Asteroid </td></tr>
<tr><td align="left" balign="left"> + isAsteroid(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAsteroidX(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidY(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidXVelocity(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidYVelocity(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidRadius(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidMass(asteroid : Asteroid) : double </td></tr>
<tr><td align="left" balign="left"> + getAsteroidWorld(asteroid : Asteroid) : World </td></tr>
<tr><td align="left" balign="left"> + isBullets(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getBulletX(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletY(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletXVelocity(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletYVelocity(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletRadius(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletMass(bullet : Bullet) : double </td></tr>
<tr><td align="left" balign="left"> + getBulletWorld(bullet : Bullet) : World </td></tr>
<tr><td align="left" balign="left"> + getBulletSource(bullet : Bullet) : Ship </td></tr>
<tr><td align="left" balign="left"> + parseProgram(text : String) : IFacade.ParseOutcome&lt;Program&gt; </td></tr>
<tr><td align="left" balign="left"> + loadProgramFromStream(stream : InputStream) : IFacade.ParseOutcome&lt;Program&gt; </td></tr>
<tr><td align="left" balign="left"> + loadProgramFromUrl(url : URL) : IFacade.ParseOutcome&lt;Program&gt; </td></tr>
<tr><td align="left" balign="left"> + isTypeCheckingSupported() : boolean </td></tr>
<tr><td align="left" balign="left"> + typeCheckProgram(program : Program) : IFacade.TypeCheckOutcome </td></tr>
<tr><td align="left" balign="left"> + setShipProgram(ship : Ship, program : Program) </td></tr>
		</table></td></tr>
		</table>>, URL="../model/IFacade.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//main.Asteroids<World, Ship, Asteroid, Bullet, Program> extends javax.swing.JFrame
	c3658:p -> c3527:p [dir=back,arrowtail=empty];
	// main.Asteroids<World, Ship, Asteroid, Bullet, Program> NAVASSOC main.AsteroidsMenu<World, Ship, Asteroid, Bullet, Program>
	c3527:p -> c3531:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// main.Asteroids<World, Ship, Asteroid, Bullet, Program> NAVASSOC main.WorldView<World, Ship, Asteroid, Bullet, Program>
	c3527:p -> c3529:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// main.Asteroids<World, Ship, Asteroid, Bullet, Program> NAVASSOC model.IFacade<World, Ship, Asteroid, Bullet, Program>
	c3527:p -> c3542:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// main.Asteroids<World, Ship, Asteroid, Bullet, Program> NAVASSOC main.Sound
	c3527:p -> c3526:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// main.Asteroids<World, Ship, Asteroid, Bullet, Program> NAVASSOC java.net.URL
	c3527:p -> c3663:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// main.WorldView<World, Ship, Asteroid, Bullet, Program> NAVASSOC main.Asteroids<World, Ship, Asteroid, Bullet, Program>
	c3529:p -> c3527:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// main.WorldView<World, Ship, Asteroid, Bullet, Program> NAVASSOC model.IFacade<World, Ship, Asteroid, Bullet, Program>
	c3529:p -> c3542:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// main.AsteroidsMenu<World, Ship, Asteroid, Bullet, Program> NAVASSOC main.Asteroids<World, Ship, Asteroid, Bullet, Program>
	c3531:p -> c3527:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// javax.swing.JFrame
	c3658 [label=<<table title="javax.swing.JFrame" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JFrame.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JFrame </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EXIT_ON_CLOSE : int </td></tr>
<tr><td align="left" balign="left"> - defaultLookAndFeelDecoratedKey : Object </td></tr>
<tr><td align="left" balign="left"> - defaultCloseOperation : int </td></tr>
<tr><td align="left" balign="left"> - transferHandler : TransferHandler </td></tr>
<tr><td align="left" balign="left"> # rootPane : JRootPane </td></tr>
<tr><td align="left" balign="left"> # rootPaneCheckingEnabled : boolean </td></tr>
<tr><td align="left" balign="left"> # accessibleContext : AccessibleContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JFrame() </td></tr>
<tr><td align="left" balign="left"> + JFrame(arg0 : GraphicsConfiguration) </td></tr>
<tr><td align="left" balign="left"> + JFrame(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + JFrame(arg0 : String, arg1 : GraphicsConfiguration) </td></tr>
<tr><td align="left" balign="left"> # frameInit() </td></tr>
<tr><td align="left" balign="left"> # createRootPane() : JRootPane </td></tr>
<tr><td align="left" balign="left"> # processWindowEvent(arg0 : WindowEvent) </td></tr>
<tr><td align="left" balign="left"> + setDefaultCloseOperation(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getDefaultCloseOperation() : int </td></tr>
<tr><td align="left" balign="left"> + setTransferHandler(arg0 : TransferHandler) </td></tr>
<tr><td align="left" balign="left"> + getTransferHandler() : TransferHandler </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + setJMenuBar(arg0 : JMenuBar) </td></tr>
<tr><td align="left" balign="left"> + getJMenuBar() : JMenuBar </td></tr>
<tr><td align="left" balign="left"> # isRootPaneCheckingEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> # setRootPaneCheckingEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> # addImpl(arg0 : Component, arg1 : Object, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Component) </td></tr>
<tr><td align="left" balign="left"> + setLayout(arg0 : LayoutManager) </td></tr>
<tr><td align="left" balign="left"> + getRootPane() : JRootPane </td></tr>
<tr><td align="left" balign="left"> # setRootPane(arg0 : JRootPane) </td></tr>
<tr><td align="left" balign="left"> + setIconImage(arg0 : Image) </td></tr>
<tr><td align="left" balign="left"> + getContentPane() : Container </td></tr>
<tr><td align="left" balign="left"> + setContentPane(arg0 : Container) </td></tr>
<tr><td align="left" balign="left"> + getLayeredPane() : JLayeredPane </td></tr>
<tr><td align="left" balign="left"> + setLayeredPane(arg0 : JLayeredPane) </td></tr>
<tr><td align="left" balign="left"> + getGlassPane() : Component </td></tr>
<tr><td align="left" balign="left"> + setGlassPane(arg0 : Component) </td></tr>
<tr><td align="left" balign="left"> + getGraphics() : Graphics </td></tr>
<tr><td align="left" balign="left"> + repaint(arg0 : long, arg1 : int, arg2 : int, arg3 : int, arg4 : int) </td></tr>
<tr><td align="left" balign="left"> + setDefaultLookAndFeelDecorated(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isDefaultLookAndFeelDecorated() : boolean </td></tr>
<tr><td align="left" balign="left"> # paramString() : String </td></tr>
<tr><td align="left" balign="left"> + getAccessibleContext() : AccessibleContext </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JFrame.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.net.URL
	c3663 [label=<<table title="java.net.URL" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/net/URL.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> URL </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - protocolPathProp : String </td></tr>
<tr><td align="left" balign="left"> - protocol : String </td></tr>
<tr><td align="left" balign="left"> - host : String </td></tr>
<tr><td align="left" balign="left"> - port : int </td></tr>
<tr><td align="left" balign="left"> - file : String </td></tr>
<tr><td align="left" balign="left"> - query : String </td></tr>
<tr><td align="left" balign="left"> - authority : String </td></tr>
<tr><td align="left" balign="left"> - path : String </td></tr>
<tr><td align="left" balign="left"> - userInfo : String </td></tr>
<tr><td align="left" balign="left"> - ref : String </td></tr>
<tr><td align="left" balign="left"> ~ hostAddress : InetAddress </td></tr>
<tr><td align="left" balign="left"> ~ handler : URLStreamHandler </td></tr>
<tr><td align="left" balign="left"> - hashCode : int </td></tr>
<tr><td align="left" balign="left"> ~ factory : URLStreamHandlerFactory </td></tr>
<tr><td align="left" balign="left"> ~ handlers : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - streamHandlerLock : Object </td></tr>
<tr><td align="left" balign="left"> - GOPHER : String </td></tr>
<tr><td align="left" balign="left"> - ENABLE_GOPHER_PROP : String </td></tr>
<tr><td align="left" balign="left"> - enableGopher : boolean </td></tr>
<tr><td align="left" balign="left"> - JDK_PACKAGE_PREFIX : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + URL(arg0 : String, arg1 : String, arg2 : int, arg3 : String) </td></tr>
<tr><td align="left" balign="left"> + URL(arg0 : String, arg1 : String, arg2 : String) </td></tr>
<tr><td align="left" balign="left"> + URL(arg0 : String, arg1 : String, arg2 : int, arg3 : String, arg4 : URLStreamHandler) </td></tr>
<tr><td align="left" balign="left"> + URL(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + URL(arg0 : URL, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + URL(arg0 : URL, arg1 : String, arg2 : URLStreamHandler) </td></tr>
<tr><td align="left" balign="left"> - isValidProtocol(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> - checkSpecifyHandler(arg0 : SecurityManager) </td></tr>
<tr><td align="left" balign="left"> # set(arg0 : String, arg1 : String, arg2 : int, arg3 : String, arg4 : String) </td></tr>
<tr><td align="left" balign="left"> # set(arg0 : String, arg1 : String, arg2 : int, arg3 : String, arg4 : String, arg5 : String, arg6 : String, arg7 : String) </td></tr>
<tr><td align="left" balign="left"> + getQuery() : String </td></tr>
<tr><td align="left" balign="left"> + getPath() : String </td></tr>
<tr><td align="left" balign="left"> + getUserInfo() : String </td></tr>
<tr><td align="left" balign="left"> + getAuthority() : String </td></tr>
<tr><td align="left" balign="left"> + getPort() : int </td></tr>
<tr><td align="left" balign="left"> + getDefaultPort() : int </td></tr>
<tr><td align="left" balign="left"> + getProtocol() : String </td></tr>
<tr><td align="left" balign="left"> + getHost() : String </td></tr>
<tr><td align="left" balign="left"> + getFile() : String </td></tr>
<tr><td align="left" balign="left"> + getRef() : String </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + sameFile(arg0 : URL) : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toExternalForm() : String </td></tr>
<tr><td align="left" balign="left"> + toURI() : URI </td></tr>
<tr><td align="left" balign="left"> + openConnection() : URLConnection </td></tr>
<tr><td align="left" balign="left"> + openConnection(arg0 : Proxy) : URLConnection </td></tr>
<tr><td align="left" balign="left"> + openStream() : InputStream </td></tr>
<tr><td align="left" balign="left"> + getContent() : Object </td></tr>
<tr><td align="left" balign="left"> + getContent(arg0 : Class&lt;&gt;[]) : Object </td></tr>
<tr><td align="left" balign="left"> + setURLStreamHandlerFactory(arg0 : URLStreamHandlerFactory) </td></tr>
<tr><td align="left" balign="left"> ~ getURLStreamHandler(arg0 : String) : URLStreamHandler </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : ObjectInputStream) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/net/URL.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

